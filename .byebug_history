continue
msg
exit
flash.first.msg
flash.first
flash.msg
flash
exit
ext
continue
next
nest
next
@game.next_player
game.next_player
next
@trick
trick
@game
@game.trick.cards.first
@game.trick.cards
Trick.all.first.cards
Trick.all.first
Trick.all
@card
@game.trick.cards
@game.trick
next
@game.trick.cards
@game.trick
@game.round
@current_player.hand.cards.count
@current_player.hand.cards
@current_player.hand
@game.player_to_play(@players)==@current_player
@game.player_to_play(@players)
@game
exit
@current_player
players[0] == @current_player
players[0]
    params[:players].each do |player_id|
@players = []
self.next_player
self.next
players
continue
Game.all
game.all
continue
Game.all
@game
params
self.round
self.next_player
players[0]
players
exit
flash
exit
continue
@game.trick.cards.first
@game.trick.cards
@game.trick
exit
@card
@game.trick.cards
@game.trick
@game.round
@current_player.hand.cards.count
continue
@card
card
continue
@game.trick.cards
@game.trick
@game
continue
Card.all
@game.trick.cards.all
@game.trick.cards
@game.trick
Card.all.count
Card.all
@game
@deck
exit
@game.trick.cards
@game.trick
@game
continue
Card.all.count
@game.deck
@game
Deck.all
exit
card = Card.where(deck: self).pop
card = Card.where(deck: self).pop()
card = Card.where(deck: self).first
Card.where(deck: self).count
Card.where(deck: self)
self.cards.first
self.cards
@game
Card.all.count
Card.all
self
Deck.all
@deck
continue
Card.count
Card.all
Cards
exit
Deck.create(game: @game)
@deck
@game
exit
params[:card]
params
exit
Game.first
Game.all
continue
Game.all
Trick.all
exit
Trick.all
Game.all
continue
@current_player.game
@game
continue
@current_player.game
@current_player
GamePlayer.all
Game.all
@Game.all
exit
@current_player.game
@current_player
qcurrent_player
GamePlayer.all
GamePlayer.yll
Game.all
Game.all.first
@game
exit
@current_player.game
@current_player
GamePlayer.all
Game.all
exit
@current_player.game
@current_player
Game.all
exit
@current_player.game
continue
@current_player.game
GamePlayer.all
Game.all
exit
rake db:drop:all
Game.all
continue
@current_player.game
@current_player
@curren_player
@player
@game.trick
@game
continue
@game.trick
@game
continue
@game.trick
@game
continue
@current_player.game
@current_player
@players
@player
@game
continue
@game.trick
@game
continue
Player.all
@current_player
@current_palyer
@players
@game
exit
GamePlayer.all
@current_player.game
@current_player.games
@players
@current_player
@game.trick
@game
continue
Trick.all
@game.trick
@game
continue
@trick
exit
@players.first.to_i
@players.first.to_int
@players.first
@players
exit
@game.trick
@game
@pgame
@players.first.hand
@players.first
@players
@current_player
continue
contiunue
continue
exit
@@cards.count
@@cards
next
continue
Deck.order_value(@cards[10])
Deck.order_value(@cards[9])
Deck.order_value(@cards[8])
Deck.order_value(@cards[7])
Deck.order_value(@cards[6])
Deck.order_value(@cards[5])
Deck.order_value(@cards[4])
Deck.order_value(@cards[3])
Deck.order_value(@cards[2])
Deck.order_value(@cards[1])
Deck.order_value(@cards[0])
@cards[0]
@cards
continue
next
sort_cards
@cards
continue
hand
@deck_cards.count
@deck_cards
continue
hand.Herz_Dame_1!
hand.Herz_Dame_1?
hand.Herz_Dame_?
hand.Herz_Dame_1 = 1
hand.Herz_Dame_1 = True!
hand.Herz_Dame_1 = true!
