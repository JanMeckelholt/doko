continue
contiunue
continue
exit
@@cards.count
@@cards
next
continue
Deck.order_value(@cards[10])
Deck.order_value(@cards[9])
Deck.order_value(@cards[8])
Deck.order_value(@cards[7])
Deck.order_value(@cards[6])
Deck.order_value(@cards[5])
Deck.order_value(@cards[4])
Deck.order_value(@cards[3])
Deck.order_value(@cards[2])
Deck.order_value(@cards[1])
Deck.order_value(@cards[0])
@cards[0]
@cards
continue
next
sort_cards
@cards
continue
hand
@deck_cards.count
@deck_cards
continue
hand.Herz_Dame_1!
hand.Herz_Dame_1?
hand.Herz_Dame_?
hand.Herz_Dame_1 = 1
hand.Herz_Dame_1 = True!
hand.Herz_Dame_1 = true!
hand.Herz_Dame_1!
hand.cards
exit
hand.cards
hand.Herz_Dame_1 = true
hand.Herz_Dame_1!
card = @deck_cards.pop()
@deck_cards
hand
exit
@deck_cards.shuffle!
@deck_cards.count
@deck_cards
exit
@deck_cards.class
@deck_cards.count
@deck_cards
exit
@deck_cards.shuffle
@deck_cards
exit
@deck_cards
exit
@deck_cards
continue
conitnue
exit
suit[0]
suit.keys
suit.key
suit
value
exit
Card.suits[3]
Card.suits
Card.values
hand.cards.first
hand.cards
hand
exit
continue
card.to_s
card.value
card.id
card
exit
exkt
card.suit
card.value
card.id
card
card.value
card.to_s
card
exit
card.to_s
card
exit
@current_player.hands
@current_player.hand
@current_player
exit
test.first.player
test.first
test
test = find_players
find_players
find_player
@players
@current_player
@player
@game
continue
@players.first.email
@players
@game
game
continue
@current_player
@game
@players.first.email
@players.first
@players
exit
Game.find(params[:game])
Game.find(1)
Game.findby_id(1)
Game(1)
params[:game]
params
exit
@game["players"]
@game["deck"]
@game.hands
@game[0]
@game
@game.deck
@game[:deck]
@game
@game.deck_cards
@game[deck]
@game.deck
@game.class
@game.inspect
@game.start
@game.players
@game
session
exit
@game.hands
@game
exit
params
@game
continue
params
@game
exit
params[:players][0]
params[:players]
params
exit
params
exit
params
exit
@game
game
params
exit
params
exit
@game
exit
@game
exit
eixt
exitg
exit
hand_cards.first.order_value
hand_cards.first
exit
hand_cards.first.order_value
hand_cards.first
hand_cards
exit
continue
@hand_cards.first.numeric_value
@hand_cards.first.order_value
@hand_cards.first
@hand_cards
exit
@hand1.hand_cards
@hand1
@deck_cards
exit
self
deck
card
exit
card
card.value
hand.cards
hand.cards.new(value: card.value)
hand.cards.new(card)
hand.cards.add(card)
card = @deck_cards.pop
hand
@deck_cards.pop
@deck_cards.count
@deck_cards
@hand1
@hand
card
hand
continue
exit
@deck_cards
exit
@cards[0]
cards[0]
@hand1.cards
@hand1
exit
continue
@cards[0]
@cards
exit
card
exit
@cards
continue
@cards
exit
@cards
exit
suit
value
card
exit
@game
@deck
@cards
continue
@deck.build_deck()
@deck
@card
@cards
@game
exit
Card.new(value: value, suit: suit)
value
suit
exit
card.suit()
card.value()
card
card.set_cardtype(10, "heart")
card.setcardtype(10, "heart")
card.setcardtype(10, heart)
